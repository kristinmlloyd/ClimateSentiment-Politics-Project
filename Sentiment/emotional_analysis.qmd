---
title: "Emotional Analysis"
author: "Kristin Lloyd"
format: 
  html:
    embed-resources: true
    code-fold: true
---

```{r}

options(repos = c(CRAN = "https://cran.rstudio.com"))
install.packages("tidyverse")
library(tidyverse)

```

Let's load the dataset

```{r}

df <- read.csv("../Data/processed-data/Senators_final.csv")

```

I will create a barchart showing me how many times each emotion occured in the dataset.

```{r}

emotion_counts <- count(df, emotion)
emotion_counts <- emotion_counts[order(-emotion_counts$n), ]

ggplot(emotion_counts, aes(x = reorder(emotion, n), y = n)) +
  geom_bar(stat = "identity", fill = "steelblue", alpha = 0.8) +
  coord_flip() +
  labs(
    title = "Distribution of Emotions in Senator Statements",
    x = "Emotion",
    y = "Count"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
    axis.text = element_text(size = 10),
    axis.title = element_text(size = 12)
  ) +
  geom_text(aes(label = n), hjust = -0.2, size = 3.5)

```

The model categorized a huge majority of the sentiment as neutral. The model only caught 60 emotional pieces of sentiment. Let's look at emotion by party, excluding "neutral".

```{r}

emotion_party_counts <- df %>%
  filter(emotion != "neutral") %>% 
  group_by(party, emotion) %>%
  summarise(count = n(), .groups = 'drop') %>%
  group_by(party) %>%
  mutate(proportion = count / sum(count)) %>%
  ungroup()

emotion_colors <- c(
  "admiration" = "#98D7C2",   
  "annoyance" = "#FFFFA1",   
  "approval" = "#E6E6FA",     
  "caring" = "#FF9E8E",    
  "desire" = "#ADD8E6",       
  "disappointment" = "#FFB347",
  "disapproval" = "#90EE90",
  "excitement" = "#FFB6C1",   
  "fear" = "#D3D3D3",         
  "gratitude" = "#DDA0DD",  
  "joy" = "#98FB98",         
  "optimism" = "green",     
  "realization" = "pink",  
  "sadness" = "blue"       
)

```

```{r}

ggplot(emotion_party_counts, aes(x = party, y = proportion, fill = emotion)) +
  geom_bar(stat = "identity", position = "fill") +
  scale_fill_manual(values = emotion_colors) +
  labs(
    title = "Proportional Distribution of Emotions by Political Party",
    x = "Party",
    y = "Proportion",
    fill = "Emotion"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
    axis.text.x = element_text(angle = 0, hjust = 0.5),
    legend.position = "right"
  )

```

There was only one sentiment identified for Indepdent senators, which is gratitude. However, there are only two Indepdent senators in the dataset. Democrat and Republican senators are mixed, with Republicans displaying more fear and Democrats displaying more gratitude. The plot is not reliable/trustworthy due to the model only capturing sixty emotions. Here are the counts for each party.

Let's look at emotion by region, even though we know the plot will not be very reliable. 

```{r}

emotion_region_counts <- df %>%
  filter(emotion != "neutral") %>%
  group_by(region, emotion) %>%
  summarise(count = n(), .groups = 'drop') %>%
  group_by(region) %>%
  mutate(proportion = count / sum(count)) %>%
  ungroup()

ggplot(emotion_region_counts, aes(x = region, y = proportion, fill = emotion)) +
  geom_bar(stat = "identity", position = "fill") +
  scale_fill_manual(values = emotion_colors) +
  labs(
    title = "Proportional Distribution of Emotions by Region",
    x = "Region",
    y = "Proportion",
    fill = "Emotion"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
    axis.text.x = element_text(angle = 45, hjust = 1),
    legend.position = "right"
  )

```

Northeast and South express a lot of gratitude/admiration and the Midwest expresses more dissapointment. Again, these results are not reliable. I am analyzing emotion for EDA and future work, but there is not much to be done with it unless the model can be improved.

## President

Let's load the data and look at the presidents emotions when talking about climate change. 

```{r}

df_president <- read.csv("../Data/processed-data/President_final.csv")

```

```{r}

emotion_counts <- df_president %>%
  count(emotion) %>%
  arrange(desc(n))

ggplot(emotion_counts, aes(x = reorder(emotion, n), y = n)) +
  geom_bar(stat = "identity", fill = "steelblue", alpha = 0.8) +
  coord_flip() + 
  geom_text(aes(label = n), hjust = 1.2, color = "black", size = 3.5) + 
  labs(
    title = "Distribution of Emotions in President Statements",
    x = "Emotion",
    y = "Count"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
    axis.text = element_text(size = 10),
    axis.title = element_text(size = 12)
  )

```

According to the model, most of President Trump's sentiment is neutral. Let's look closer at the emotions it did identify.

```{r}

df_filtered <- df_president[df_president$emotion != "neutral", ]

emotion_counts <- table(df_filtered$emotion)
emotion_counts <- as.data.frame(emotion_counts)
colnames(emotion_counts) <- c("emotion", "count")

emotion_counts$proportion <- emotion_counts$count / sum(emotion_counts$count)

ggplot(emotion_counts, aes(x = reorder(emotion, proportion), y = proportion)) +
  geom_bar(stat = "identity", fill = "steelblue", alpha = 0.8) +
  coord_flip() +
  geom_text(aes(label = paste0(count, " (", scales::percent(proportion, accuracy = 0.1), ")")), 
            hjust = 0.5, color = "black", size = 3.5) +  
  labs(
    title = "Proportional Distribution of Emotions in President Statements",
    x = "Emotion",
    y = "Proportion"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
    axis.text = element_text(size = 10),
    axis.title = element_text(size = 12)
  )

```